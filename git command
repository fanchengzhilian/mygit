git  操作：

配置用户信息：
git config --global user.name <你的用户名>
git config --global user.email <你的邮箱地址>

创建一个仓库
git init

远程克隆一个仓库

git clone <仓库URL>

显示当前工作目录下的提交文件状态

git status

激情指定文件stage(标记为将要被提交的文件)
git add <文件路径>

将指定文件 unstage(取消标记为将要被提交的文件)
gloabl
git reset <文件路径>

创建一个调教并提交的提交信息

git commit -m "提交信息"

显示提交历史

git log

向远程仓库推送（push）
git push

从远程仓库拉取（pull）

git pull


修改（Amend） 上一个提交
 git commit --amend -m "<新提交信息>"
 
 查看所有分支
 git branch 
 
 创建新分支
  git branch <分支名字>
  
  切换分支
  git checkout <分支名字>
  
  重新命名分支
  git branch -m < 旧名字> <新名字>
  
  删除分支
  git branch -d <分支名字>
  
  将分支变基（rebase）到master
  (需要先切换到分支之后，在完成变基)
  git checkout <分支名字>
  git rebase master
  
  使用快进（Fast-Forward）将分支合并到master
   git cheeckout <分支名字>
   git merge --ff-only master
   
   中止这一次提交的合并
   git merge --abort
   
   将未提交的修改暂存（Stash）
   git stash save “<可以输入一个信息>”
   
   将上一个暂存的修改恢复并从暂存列表中删除
   
   git stash pop
   
   签出指定的提交
   
   git checkout <旧提交的hash>
   
   撤销旧提交
    （revert 并不会修改旧提交历史，而是在工作中生成与之前提交完全相反的修改）
	git revert <>旧提交的hash>
	
	查看本地仓库中的所有操作
	git reflog
	
	------------------------------------
	
没必要安装插件，可以到github项目代码页面按下。号即可，或者在项目代码网址前面加上gitpod.io/#/即可跳转到网页vscode

steam++ 加速git 访问


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

https://github.com/fanchengzhilian/mygit.git

	